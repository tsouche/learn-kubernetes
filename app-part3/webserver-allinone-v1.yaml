apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: hello-part3-deployment
  labels:
    application: hello-part3
spec:
  selector:
    matchLabels:
      application: hello-part3
  replicas: 3
  template:
    metadata:
      labels:
        application: hello-part3
    spec:
      containers:
      - name: app-part3
        image: tsouche/learn-kubernetes:part3v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # Using `GET_HOSTS_FROM=dns` requires your cluster to
          # provide a dns service. As of Kubernetes 1.3, DNS is a built-in
          # service launched automatically. However, if the cluster you are using
          # does not have a built-in DNS service, you can instead
          # access an environment variable to find the master
          # service's host. To do so, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: hello-part3-service
  labels:
    application: hello-part3
spec:
  # comment or delete the following line if you want to use a LoadBalancer
  type: NodePort
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    application: hello-part3
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-part3-ingress
  annotations:
    kubernetes.io/ingress.class: ambassador
spec:
  rules:
  - http:
      paths:
      - path: /part3
        backend:
          serviceName: hello-part3-service
          servicePort: 80
